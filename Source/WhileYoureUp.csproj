<!--EXTERNAL_PROPERTIES: Temp-->
<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>net472</TargetFramework>
        <LangVersion>latest</LangVersion>
        <Copyright>Copyright © 2020-$([System.DateTime]::Now.Year) Christopher Galpin</Copyright>
        <MinutesSinceEpoch>$([System.DateTime]::UtcNow.Subtract($([System.DateTime]::MinValue)).TotalMinutes)</MinutesSinceEpoch>
        <Revision>$([System.Math]::Truncate($([System.Decimal]::Remainder($(MinutesSinceEpoch), 10000))))</Revision>
        <Version>4.0.3.$(Revision)</Version>
        <PublicizeAsReferenceAssemblies>false</PublicizeAsReferenceAssemblies>
        <RimWorldAssemblyPath>$(MsBuildProgramFiles32)\Steam\steamapps\common\RimWorld\RimWorldWin64_Data\Managed\</RimWorldAssemblyPath>
        <Nullable>warnings</Nullable>
        <!--
        Note, if using `ILRepack.Lib.MSBuild.Task` and building within _Rider_, you'll need to switch `MSBuild version` to `MSBuild.exe` from `MSBuild.dll`
        within settings or it will fail with:
            > [MSB4062] The "ILRepack" task could not be loaded from the assembly C:\Users\Chris\.nuget\packages\ilrepack.lib.msbuild.task\2.0.18.2\build\ILRepack.Lib.MSBuild.Task.dll.
            > Could not load file or assembly 'Microsoft.Build.Utilities.v4.0, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
        Alternatively you can switch to `ILRepack.Lib.MSBuild` but you'll need the following or a default `.targets` file will break your `Release` builds:
            <DoILRepack>False</DoILRepack>
        -->
    </PropertyGroup>

    <Target Name="BuildMessage" AfterTargets="Build">
        <Message Text="$(Version)" Importance="High"/>
    </Target>

    <ItemGroup>
        <Publicize Include="Assembly-CSharp;UnityEngine.CoreModule"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="ILRepack.Lib.MSBuild.Task" Version="2.0.18.2"/>
        <PackageReference Include="Krafs.Publicizer" Version="2.2.1">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Lib.Harmony" Version="2.2.2">
            <GeneratePathProperty>True</GeneratePathProperty>
        </PackageReference>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\..\CodeOptimist\CodeOptimist.csproj"/>
    </ItemGroup>

    <ItemGroup>
        <Reference Include="Assembly-CSharp">
            <HintPath>$(RimWorldAssemblyPath)Assembly-CSharp.dll</HintPath>
            <Private>false</Private>
        </Reference>
        <Reference Include="UnityEngine.CoreModule">
            <HintPath>$(RimWorldAssemblyPath)UnityEngine.CoreModule.dll</HintPath>
            <Private>false</Private>
        </Reference>
        <Reference Include="UnityEngine.TextRenderingModule">
            <HintPath>$(RimWorldAssemblyPath)UnityEngine.TextRenderingModule.dll</HintPath>
            <Private>false</Private>
        </Reference>
    </ItemGroup>

    <Target Name="ILRepackTarget" AfterTargets="Build">
        <ItemGroup>
            <!-- all but first assembly will be internalized -->
            <InputAssemblies Include="$(OutputPath)\$(AssemblyName).dll"/>
            <InputAssemblies Include="$(OutputPath)\CodeOptimist.dll"/>
        </ItemGroup>
        <ItemGroup>
            <LibraryPath Include="$(PkgLib_Harmony)\lib\net472\"/>
            <LibraryPath Include="$(RimWorldAssemblyPath)"/>
        </ItemGroup>
        <ILRepack Parallel="true" Internalize="true" LibraryPath="@(LibraryPath)" InputAssemblies="@(InputAssemblies)" OutputFile="$(ProjectDir)..\1.4\Assemblies\$(AssemblyName).dll"/>
    </Target>

    <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
        <Exec Command="type nul&gt;$(Temp)\rw_build"/>
    </Target>
</Project>