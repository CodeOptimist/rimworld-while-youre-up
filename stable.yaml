#parent=..\global.yaml
---
repo: https://github.com/CodeOptimist/rimworld-jobs-of-opportunity

_anchors:
  - !parent &global_ModMetaData ModMetaData

ModMetaData: !merge
  <: *global_ModMetaData
  url: '{discord}'
  name: Jobs of Opportunity (While You're Up)
  packageId: CodeOptimist.JobsOfOpportunity
  supportedVersions:
    - 1.1
    - 1.2
    - 1.3
  incompatibleWith:
    - hoodie.whileyoureup
    - kevlou127.WhileHYouOreHUpHQ1V0S
  incompatibleWithByVersion:
    v1.3:
      - Mlie.PickUpAndHaul

published_file_id: 2034960453
preview_from_path: '{out_dir}\..\JoO.png'

intro: |-
  [b]Opportunistic hauling; [i]Pick Up And Haul[/i] updates.[/b]
  A must-have with PUAH. Compatible with existing saves. Any load order.

steam_intro: |-
  {intro}

  [img]https://i.imgur.com/tbpLbha.gif[/img]

header: |-
  [b]A pawn's job will say "on the way to", "closer to", or "Efficiently unloading", otherwise it's a different mod[/b] (e.g. normal hauling; normal hauling with [url=https://steamcommunity.com/sharedfiles/filedetails/?id=1279012058]Pick Up And Haul[/url], or triggered by [url=https://steamcommunity.com/sharedfiles/filedetails/?id=1561769193]Common Sense[/url]).

  80% of this mod is improving [url=https://steamcommunity.com/sharedfiles/filedetails/?id=1279012058]Pick Up And Haul[/url] (optional; installed separately), if you already use PUAH, you want this mod too.

  "But my pawns are walking farther!"
  Yes. A slightly longer journey now to avoid a [i]much[/i] longer journey next time.

footer: |-


  [h1]Compatibility[/h1]
  [i]Common Sense?[/i] Yup! Incompatible settings have been made mutually exclusive.

  [i]@Modders:[/i] if you set [i]allowOpportunisticPrefix[/i] to [i]false[/i] for a JobDef, it won't allow opportunistic jobs. This is a vanilla feature.

  [h1]Performance[/h1]
  Vanilla's opportunistic hauling was well-optimized for performance, which this mod painstakingly preserves in its enhancements.
  Likewise we aggressively cache all haul destination lookups for all features, even base Pick Up And Haul.

  [h1]Known Issues[/h1]
  [i]Pawns not taking into account travel time around walls.[/i]
  Unfortunately this is a consequence of the straight-line "as the crow flies" math in the vanilla code for opportunities. If this is a huge problem for your map, set [i]Haulable & storage initial closeness[/i] to a stricter setting. Your pawns will find less opportunities.
  This is how vanilla mitigates the problem while still being performant. A good solution is for me to add an option for true pathfinding for those whose machines can handle it.
  Alternatively, build a door. 😉

  [h1]Report Bugs[/h1]
  1. Please save a game when it occurs, then reload to verify it reoccurs.
  2. Disable the mod from its own options menu - did the bug stop? If so...
  3. Send me your save ([i]Options → Open save data folder[/i]). (They zip much smaller.)
  [b]I can now fix your bug in [i]days[/i] instead of [i]months[/i]! 🎉🥳[/b]

  [h1]History[/h1]
  I intended to [url=https://gist.github.com/CodeOptimist/5a740dd803fc370ec43f22ffa8bc953d#file-utils-cs-L48]fork[/url] [url=https://steamcommunity.com/sharedfiles/filedetails/?id=1544626521]While You're Up[/url], until I saw [url=https://github.com/CodeOptimist/rimworld-jobs-of-opportunity/blob/29391b0a075a1dd77d4788777b0137e26390328c/Source/Patch_TryOpportunisticJob.cs]RimWorld 1.0 added it[/url]. This mod improves vanilla's integration, and so is a spiritual successor to [i]While You're Up[/i] 💜.

features:
  - desc: &v2_0_0 |-
      [u][i]Pick Up And Haul+[/i]: Better unloading[/u]
      We enhance all inventory hauling by unloading only once at each destination, in closest order.
  - desc: &v3_0_0_puah |-
      We improve performance by caching haulable destinations.
  - desc: ''

  - desc: &v1_0_0 |-
      [u]Opportunistic hauls[/u]
      Vanilla has support for opportunities, but with limitations: haulable near your [b]start[/b] position, and storage near your job.
      We prefer these, but drop them as requirements to include hauls along the path.
  - desc: ''
  - desc: &v1_1_0 |-
      We skip opportunities when bleeding or forming a caravan.
  - desc: ''

  - desc: |-
      [i]Pick Up And Haul+[/i]
  - desc: &v1_4_0 |-
      Modified to grab only surrounding things whose unload path is also opportunistic.
  - desc: ''

  - desc: |-
      [u]Haul extra supplies & ingredients closer[/u]
      If hauling resources to storage would bring them closer to their job, do that first (grabbing extra).
  - desc: ''
    steam: |-
      Your builder will never again cross the map to retrieve a [b]single[/b] component.

      [img]https://i.imgur.com/G2oh7Mm.png[/img]

  - desc: |-
      [i]Pick Up And Haul+[/i]
  - desc: &v3_0_0_hbc_puah |-
      Modified to grab extra things headed to the same storage (when higher priority).
      Grab extra supplies & ingredients headed to the same storage (when equal priority).
  - desc: ''

  - desc: &v2_3_0 |-
      [u]Mod compatibility via storage building filters[/u]
      Permit or deny for any storage building through settings, or leave automatically managed with mod updates.


updates:
  - at: 1.0.0
    desc: !join
      - "\n"
      -
        - *v1_0_0
        - ' '
        - |-
          • Triggers [url=https://steamcommunity.com/sharedfiles/filedetails/?id=1279012058][i]Mehni's[/i] Pick Up And Haul[/url].

          Haul extra construction supplies closer
          If hauling supplies to storage would bring them closer to their blueprint, do that first (grabbing extra).

  - at: 1.1.0
    desc: !join
      - "\n"
      -
        - *v1_1_0
        - ' '
        - |-
          • Updated [i]Haul extra resources[/i]
          Now works as expected: instead of denying the inefficient supply job so [i]some[/i] hauler [i]eventually[/i] hauls, the builder themselves will.

  - at: 1.2.0
    desc: |-
      • Hauls are substantially improved on the default "recommended" setting. No longer should distant wood cut or metal mined be neglected.
      (I've integrated the very last vanilla pathing check into this mod's magic.)

      • Setting tooltips updated with detailed descriptions.

  - at: 1.4.0
    desc: !join
      - "\n"
      -
        - |-
          Pick Up And Haul+: Opportunities
        - *v1_4_0

  - at: 1.5.0
    desc: |-
      • New job descriptions.
      • Added [i]Enabled[/i] setting for troubleshooting without restarts.
      • Improved settings and descriptions.

  - at: 1.5.1
    credit: https://steamcommunity.com/id/SakenW
    desc: |-
      • Compatibility with [url=https://steamcommunity.com/sharedfiles/filedetails/?id=1233893175][i]KV's[/i] Infinite Storage[/url]: [i]Haul extra resources[/i] should now work instead of looping on storage and retrieval.

  - at: 1.6.0
    desc: |-
      Haul extra bill ingredients closer
      If hauling ingredients to storage would bring them closer to their workbench, do that first (grabbing extra).

  - at: 1.6.1
    credit: Gwyndolin-chan#8975
    desc: |-
      • Fixed [i]Haul extra ingredients[/i] to no longer cause "Standing" loop when incapable. (Missed a basic check vanilla already did in the [i]Haul extra supplies[/i] scenario.)

  - at: 1.6.2
    credit: Just#1021
    desc: |-
      • Fixed [i]Haul extra resources[/i] to no longer cause "Standing" loop when ingredient is in a pawn inventory. Fixes surgery with [i]Smart Medicine[/i], compatibility with [i]Build From Inventory[/i], and others.

  - at: 2.0.0
    credit: Kellogg''s#0574
    desc: !join
      - "\n"
      -
        - *v2_0_0
        - ' '
        - |-
          • [i]Haul extra resources[/i] will trigger more often:
            - Fixed hauling from existing storage, not just un-stored.
            - New [i]from same-priority storage[/i] setting.
            - Checks closest storage (to destination, not thing) for closeness to destination.

  # wrapping issues in HugsLib news from e.g. "Prefix " instead of "Prefix"
  - at: 2.0.0
    desc: |-
      • Added job reports for [i]Haul extra resources[/i] and efficient unloading.
      • Updated [i]Draw special hauls[/i] to include resource hauls (magenta & cyan).
      • Updated for RimWorld 1.3.

  - at: 2.1.0
    desc: |-
      • Improving storage mod compatibility:
        - A̶d̶d̶e̶d̶ ̶"̶S̶t̶o̶c̶k̶p̶i̶l̶e̶s̶ ̶o̶n̶l̶y̶"̶ ̶s̶e̶t̶t̶i̶n̶g̶ ̶(̶o̶n̶ ̶b̶y̶ ̶d̶e̶f̶a̶u̶l̶t̶)̶.̶
        - Switched to vanilla-style settings window (future room for a storage building allow-list).

      • Setting for [i]Draw special hauls[/i] is now saved.
          Try it out, it's fun! See tooltip for description.

  - at: 2.1.1
    credit: https://steamcommunity.com/profiles/76561198110437158
    desc: |-
      • Fixed hauling loop issue with PUAH, chunks, and multiple dumping stockpiles.

  - at: 2.1.2
    credit: https://steamcommunity.com/id/macbuk
    desc: |-
      • Fixed inventory hauling check to work with non-Pawns (e.g. [i]Misc. Robots[/i] mod).

  - at: 2.1.3
    credit: https://steamcommunity.com/profiles/76561197971649772
    desc: |-
      • Fixed [i]Extra resource[/i] hauls occasionally being recalculated many times in 1 tick.

  - at: 2.1.4
    credit: https://steamcommunity.com/id/thispagesucks
    desc: |-
      • Fixed recent "̶S̶t̶o̶c̶k̶p̶i̶l̶e̶s̶ ̶o̶n̶l̶y̶"̶ ̶s̶e̶t̶t̶i̶n̶g̶ accidentally applying to all inventory hauling (PUAH).
      • Clarity improvements to mod settings dialog.

  - at: 2.3.0
    desc: !join
      - "\n"
      -
        - *v2_3_0
        - ' '
        - |-
          Skip opportunities when forming a caravan

  - at: 3.0.0
    desc: !join
      - ""
      -
        - |-
          BUG FIXES & UI UPDATE
          If willing, please report issues immediately via Discord link here ↗ or in Mods menu.

          • Opportunities
            - Now prefer highest storage closest to job, not to thing.
            - Added stockpile checkbox and building filters.
            - New job report: "on the way to [TARGET]"

          • Supplies & Ingredients
            - Added stockpile checkbox.
            - New job report: "closer to [TARGET]"
        - "\n"
        - "  - Pick Up And Haul+:"
        - !join ["\n    - ", [' ', !split ["\n", *v3_0_0_hbc_puah]]]
        - "\n\n"
        - |-
          • Pick Up And Haul+:
            - Fixed unloading storage choice to match calculation for haul.
            - After closest storage, will unload by thing category like original PUAH.
            - Improved performance by caching haulable destinations.
          
          • Redesigned settings dialog.
          • Put job strings in XML for easier translation.
          • Many code quality improvements that made all of this much easier.


keyed:
  - name: Opportunity_LoadReport
    value: '{{ORIGINAL}} on the way to {{DESTINATION}}.'

  - name: Opportunity_UnloadReport
    value: 'Efficiently {{ORIGINAL}}, on the way to {{DESTINATION}}.'

  - name: Opportunity_Tab
    value: Hauls of Opportunity

  - name: Opportunity_Intro
    value: |-
      Hauling on the way to a job is a vanilla feature, hence generally compatible with all mods. Some storage mods use delays, so are disallowed by default.

      We skip opportunities when bleeding or forming a caravan.

  - name: HaulBeforeCarry_LoadReport
    value: '{{ORIGINAL}}, headed closer to {{DESTINATION}}.'

  - name: HaulBeforeCarry_UnloadReport
    value: 'Efficiently {{ORIGINAL}}, closer to {{DESTINATION}}.'

  - name: HaulBeforeCarry_Tab
    value: Supplies & Ingredients

  - name: HaulBeforeCarry_Intro
    value: |-
      A pawn will find the closest resource, which is sometimes waiting delivery to storage near our job site. If we perform that haul first, they can grab extras headed to the same storage.

  - name: HaulBeforeCarry_EqualPriority
    value: |-
      If a resource is already in storage of equal priority, they won't save a trip for a dedicated hauler, but can still grab resources that expedite their future work.

  - name: PickUpAndHaulPlus_LoadReport
    value: '{{ORIGINAL}}.'

  - name: PickUpAndHaulPlus_UnloadReport
    value: 'Efficiently {{ORIGINAL}}.'

  - name: PickUpAndHaulPlus_Tab
    value: Pick Up And Haul+

  - name: PickUpAndHaulPlus_UpgradeTitle
    value: Pick Up And Haul+

  - name: PickUpAndHaulPlus_UpgradeText
    value: !join
      - "\n"
      -
        - |-
          We significantly enhance Pick Up And Haul by unloading only once at each destination, in closest order.
        - ' '
        - *v3_0_0_puah

  - name: PickUpAndHaulPlus_IntegrationTitle
    value: Jobs of Opportunity

  - name: PickUpAndHaulPlus_IntegrationText
    value: |-
      We fully integrate opportunities by ensuring our entire gather & unload path never exceeds our criteria for "opportunistic".

      When hauling extra supplies or ingredients to closer storage, we grab extra random things headed to the same higher-priority storage.


settings:
  - name: Enabled
    title: Enabled
    desc: |-
      Toggle mod without restarting.

  - name: UsePickUpAndHaulPlus
    title: Use & improve Pick Up And Haul

  - name: DrawSpecialHauls
    title: Draw special hauls
    desc: |-
      Original job paths are red, new opportunistic paths are green.

      Original ingredient/supply paths are magenta, new optimal paths are cyan.

      (This is sync'd to vanilla's [i]Development mode → inspector icon → Visibility → Draw Opportunistic Jobs[/i].)

  - name: Opportunity_HaulProximities
    title: Closeness of haulable to pawn *start* position & storage to job
    desc: |-
      The primary way we improve on vanilla's opportunistic hauling, implemented as performantly as possible.

      Set "required" if pawns are having difficulty with long walls, until I add a true pathfinding option.

  - name: Opportunity_HaulProximities_Both
    title: Require both (vanilla)
  - name: Opportunity_HaulProximities_Either
    title: Require either one
  - name: Opportunity_HaulProximities_Ignored
    title: Prefer both, require neither (recommended)

  - name: Opportunity_TweakVanilla
    title: Show advanced vanilla settings...
    desc: |-
      Provided for explaining and tweaking vanilla's built-in opportunistic hauling.

      A value of 0 will skip a check.

      All distances are straight-line ("as the crow flies").

  - name: Opportunity_MaxNewLegsPctOrigTrip
    title: Max new legs % of original trip
    desc: |-
      Max start-to-haulable + storage-to-job % of original trip.
  - name: Opportunity_MaxTotalTripPctOrigTrip
    title: Max total trip % of original trip

  - name: Opportunity_MaxStartToThing
    title: Max start-to-haulable
  - name: Opportunity_MaxStartToThingPctOrigTrip
    title: Max start-to-haulable % of original trip
  - name: Opportunity_MaxStartToThingRegionLookCount
    title: Max start-to-haulable region look count
    desc: &region_look_count |-
      This parameter limits our actual pathing.
      To understand it, enable [i]Development mode → inspector icon → Visibility → Draw Regions[/i].

      Exploration begins from the start region spreading out to all neighbors until encountering the destination region. This setting caps the total number explored - even those in the wrong direction.

      It can't be calculated perfectly from distance, as regions will vary in size and neighbors. (A corridor has only forward and back, so they're explored further.)
      But in a completely open field, if a pawn must travel the distance of n=3 full-sized 12x12 regions (~36 tiles), the algorithm will explore 2(n^2+n)+1 or 25 regions.
  - name: Opportunity_MaxStoreToJob
    title: Max storage-to-job
  - name: Opportunity_MaxStoreToJobPctOrigTrip
    title: Max storage-to-job % of original trip
  - name: Opportunity_MaxStoreToJobRegionLookCount
    title: Max storage-to-job region look count
    desc: *region_look_count

  - name: Opportunity_ToStockpiles
    title: &toStockpiles Work with stockpiles

  - name: Opportunity_AutoBuildings
    title: &autoBuildings Auto-manage buildings (updated from feedback)

  - name: HaulBeforeCarry_Supplies
    title: Haul extra construction supplies closer

  - name: HaulBeforeCarry_Bills
    title: Haul extra bill ingredients closer

  - name: HaulBeforeCarry_ToEqualPriority
    title: Haul extra resources closer from same-priority storage

  - name: HaulBeforeCarry_ToStockpiles
    title: *toStockpiles

  - name: HaulBeforeCarry_AutoBuildings
    title: *autoBuildings
